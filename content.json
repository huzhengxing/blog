{"meta":{"title":"爱折腾的Albert","subtitle":"","description":"","author":"Albert","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2019-11-12T01:30:07.000Z","updated":"2019-11-12T02:00:16.818Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-11-12T01:29:56.000Z","updated":"2019-11-12T01:59:53.023Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"关于我","date":"2019-11-12T01:29:53.000Z","updated":"2019-11-12T01:56:07.202Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Springboot整合Websocket","slug":"Springboot整合Websocket","date":"2019-11-13T02:09:37.000Z","updated":"2019-11-13T01:38:09.586Z","comments":true,"path":"2019/11/13/Springboot整合Websocket/","link":"","permalink":"http://yoursite.com/2019/11/13/Springboot%E6%95%B4%E5%90%88Websocket/","excerpt":"springboot整合websocket,实现即使通讯的一对一单聊。1. 导入相关依赖12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.11&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;tk.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.komlin&lt;/groupId&gt; &lt;artifactId&gt;common&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; &lt;!--swagger2--&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.9.2&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-models&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt; &lt;version&gt;1.5.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-models&lt;/artifactId&gt; &lt;version&gt;1.5.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt; &lt;version&gt;1.5.17.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;commons-lang&lt;/groupId&gt; &lt;artifactId&gt;commons-lang&lt;/artifactId&gt; &lt;version&gt;2.6&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt;","text":"springboot整合websocket,实现即使通讯的一对一单聊。1. 导入相关依赖12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.11&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;tk.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.komlin&lt;/groupId&gt; &lt;artifactId&gt;common&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; &lt;!--swagger2--&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.9.2&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-models&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt; &lt;version&gt;1.5.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.swagger&lt;/groupId&gt; &lt;artifactId&gt;swagger-models&lt;/artifactId&gt; &lt;version&gt;1.5.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt; &lt;version&gt;1.5.17.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;commons-lang&lt;/groupId&gt; &lt;artifactId&gt;commons-lang&lt;/artifactId&gt; &lt;version&gt;2.6&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 这里用的是1.5.17.RELEASE版本的websocket,之前用了2.0.4RELEASE版本存在问题 2. 配置ServerEndpoint注入Spring将ServerEndpointExporter类注入到spring容器,处理@ServerEndpoint注解的实现类 12345678@Configurationpublic class WSConfig &#123; @Bean public ServerEndpointExporter serverEndpointExporter() &#123; return new ServerEndpointExporter(); &#125;&#125; 3. 实现类这里可以处理我们需要的逻辑,这里简单的实现了一个一对一单聊 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283@ServerEndpoint(value = \"/websocket/&#123;userId&#125;\")@Slf4j@Componentpublic class WSController &#123; private static ConcurrentHashMap&lt;String, Session&gt; onlineUsers = new ConcurrentHashMap&lt;&gt;(); /** * 开始连接时，调用 * @param session * @param userId */ @OnOpen public void onOpen(Session session, @PathParam(\"userId\") String userId) &#123; log.info(\"进入:&#123;&#125;\",\"onOpen\"); log.info(\"userId:&#123;&#125;\",userId); if (onlineUsers.get(userId) != null ) &#123; sendMessage(session,\"您已经在线!\"); return; &#125; onlineUsers.put(userId,session); printOnlineUserSize(); &#125; /** * 关闭连接时调用 * @param session */ @OnClose public void onClose(Session session) &#123; onlineUsers.forEach((k,v) -&gt; &#123; if (v.getId().equals(session.getId())) &#123; log.info(\"有人下线了:&#123;&#125;\",k); onlineUsers.remove(k); &#125; &#125;); printOnlineUserSize(); log.info(\"进入:&#123;&#125;\",\"onClose\"); &#125; /** * 接收客户端的消息 * @param session * @param message */ @OnMessage public void onMessage(Session session,String message) &#123; log.info(\"进入:&#123;&#125;\",\"onMessage\"); log.info(\"message:&#123;&#125;\",message); Message messageObject = JsonUtils.jsonToPojo(message, Message.class); Session sessionOfFriend = onlineUsers.get(messageObject.getFriendUserId()); if (sessionOfFriend != null) &#123; sendMessage(sessionOfFriend,messageObject.getText()); &#125; &#125; /** * 报错时调用 * @param session * @param throwable */ @OnError public void onError(Session session,Throwable throwable) &#123; log.info(\"进入:&#123;&#125;\",\"onError\"); &#125; /** * 向客服端发送消息 * @param session * @param message */ private void sendMessage(Session session,String message) &#123; try &#123; session.getBasicRemote().sendText(message); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; private void printOnlineUserSize() &#123; log.info(\"当前在线人数:&#123;&#125;\",onlineUsers.size()); &#125;&#125;","categories":[{"name":"IM","slug":"IM","permalink":"http://yoursite.com/categories/IM/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://yoursite.com/tags/springboot/"},{"name":"websocket","slug":"websocket","permalink":"http://yoursite.com/tags/websocket/"}]}]}